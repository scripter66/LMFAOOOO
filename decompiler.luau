--[[

		Gui2Luaâ„¢
		10zOfficial
		Version 1.0.0

]]


-- Instances

local TYTFdyRTYft8D8yteeY = Instance.new("ScreenGui")
local yV7rf7876f637G9t78 = Instance.new("Frame")
local tab2 = Instance.new("Frame")
local File = Instance.new("TextButton")
local file2 = Instance.new("TextButton")
local TopBar = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local Editor2 = Instance.new("Frame")
local editor = Instance.new("TextButton")
local edito = Instance.new("TextButton")
local Clean = Instance.new("TextButton")
local Open = Instance.new("TextButton")
local Code = Instance.new("ScrollingFrame")
local Source = Instance.new("TextBox")
local Tokens_ = Instance.new("TextLabel")
local Numbers_ = Instance.new("TextLabel")
local Keywords_ = Instance.new("TextLabel")
local Globals_ = Instance.new("TextLabel")
local Strings_ = Instance.new("TextLabel")
local Comments_ = Instance.new("TextLabel")
local Vars_ = Instance.new("TextLabel")
local UIListLayout = Instance.new("UIListLayout")
local Lines = Instance.new("TextLabel")
local Execute = Instance.new("TextButton")
local Scripts = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local TextButton_2 = Instance.new("TextButton")
local UICorner_2 = Instance.new("UICorner")
local TextButton_3 = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local TextButton_4 = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local TextButton_5 = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local UICorner_6 = Instance.new("UICorner")
local yV7rf7876f67G9t78 = Instance.new("Frame")

-- Properties

TYTFdyRTYft8D8yteeY.Name = "TYTFdyRTYft8D8yteeY"
TYTFdyRTYft8D8yteeY.Parent = Instance.new("ScreenGui", game:GetService("CoreGui"));
TYTFdyRTYft8D8yteeY.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
TYTFdyRTYft8D8yteeY.DisplayOrder = 999999999
TYTFdyRTYft8D8yteeY.ResetOnSpawn = false
TYTFdyRTYft8D8yteeY.IgnoreGuiInset = true

yV7rf7876f637G9t78.Name = "yV7rf7876f637G9t78"
yV7rf7876f637G9t78.Parent = TYTFdyRTYft8D8yteeY
yV7rf7876f637G9t78.BackgroundColor3 = Color3.new(0.0509804, 0.054902, 0.0705882)
yV7rf7876f637G9t78.BorderColor3 = Color3.new(0, 0, 0)
yV7rf7876f637G9t78.BorderSizePixel = 0
yV7rf7876f637G9t78.Position = UDim2.new(0.0131649617, 3, 0.143336192, 0)
yV7rf7876f637G9t78.Size = UDim2.new(0, 479, 0, 321)
yV7rf7876f637G9t78.ZIndex = 999999999

tab2.Name = "tab2"
tab2.Parent = yV7rf7876f637G9t78
tab2.BackgroundColor3 = Color3.new(0.101961, 0.105882, 0.121569)
tab2.BorderColor3 = Color3.new(0, 0, 0)
tab2.BorderSizePixel = 0
tab2.Position = UDim2.new(0, 0, 0.0716510937, 0)
tab2.Size = UDim2.new(0, 479, 0, 25)
tab2.ZIndex = 999999999

File.Name = "File"
File.Parent = tab2
File.BackgroundColor3 = Color3.new(0.101961, 0.105882, 0.121569)
File.BorderColor3 = Color3.new(0, 0, 0)
File.BorderSizePixel = 0
File.Size = UDim2.new(0, 44, 0, 25)
File.ZIndex = 999999999
File.Font = Enum.Font.TitilliumWeb
File.Text = ""
File.TextColor3 = Color3.new(1, 1, 1)
File.TextSize = 20

file2.Name = "file2"
file2.Parent = File
file2.BackgroundColor3 = Color3.new(1, 1, 1)
file2.BackgroundTransparency = 1
file2.BorderColor3 = Color3.new(0, 0, 0)
file2.BorderSizePixel = 0
file2.Position = UDim2.new(0, 0, 0.300000012, 0)
file2.Size = UDim2.new(0, 44, 0, 11)
file2.ZIndex = 999999999
file2.Font = Enum.Font.TitilliumWeb
file2.Text = "File"
file2.TextColor3 = Color3.new(1, 1, 1)
file2.TextSize = 20

TopBar.Name = "TopBar"
TopBar.Parent = yV7rf7876f637G9t78
TopBar.BackgroundColor3 = Color3.new(1, 1, 1)
TopBar.BackgroundTransparency = 1
TopBar.BorderColor3 = Color3.new(0, 0, 0)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(0, 484, 0, 23)
TopBar.ZIndex = 999999999

Title.Name = "Title"
Title.Parent = TopBar
Title.BackgroundColor3 = Color3.new(1, 1, 1)
Title.BackgroundTransparency = 1
Title.BorderColor3 = Color3.new(0, 0, 0)
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0.419421494, 0, 0, 0)
Title.Size = UDim2.new(0, 71, 0, 23)
Title.ZIndex = 999999999
Title.Font = Enum.Font.TitilliumWeb
Title.Text = "ryxz.lol"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextSize = 19

Editor2.Name = "Editor2"
Editor2.Parent = yV7rf7876f637G9t78
Editor2.BackgroundColor3 = Color3.new(0.0823529, 0.0862745, 0.101961)
Editor2.BorderColor3 = Color3.new(0, 0, 0)
Editor2.BorderSizePixel = 0
Editor2.Position = UDim2.new(0, 0, 0.149532706, 0)
Editor2.Size = UDim2.new(0, 479, 0, 273)
Editor2.ZIndex = 999999999

editor.Name = "editor"
editor.Parent = Editor2
editor.BackgroundColor3 = Color3.new(0.0509804, 0.054902, 0.0705882)
editor.BorderColor3 = Color3.new(0, 0, 0)
editor.BorderSizePixel = 0
editor.Position = UDim2.new(0.0146137783, 0, 0.0320000015, 0)
editor.Size = UDim2.new(0, 44, 0, 21)
editor.ZIndex = 999999999
editor.Font = Enum.Font.TitilliumWeb
editor.Text = " "
editor.TextColor3 = Color3.new(1, 1, 1)
editor.TextSize = 14

edito.Name = "edito"
edito.Parent = editor
edito.BackgroundColor3 = Color3.new(0.0509804, 0.054902, 0.0705882)
edito.BorderColor3 = Color3.new(0, 0, 0)
edito.BorderSizePixel = 0
edito.Position = UDim2.new(0.0521919951, 0, 0, 0)
edito.Size = UDim2.new(0, 41, 0, 19)
edito.ZIndex = 999999999
edito.Font = Enum.Font.TitilliumWeb
edito.Text = "Editor"
edito.TextColor3 = Color3.new(1, 1, 1)
edito.TextSize = 19

Clean.Name = "Clean"
Clean.Parent = Editor2
Clean.BackgroundColor3 = Color3.new(0.12549, 0.129412, 0.145098)
Clean.BorderColor3 = Color3.new(0, 0, 0)
Clean.BorderSizePixel = 0
Clean.Position = UDim2.new(0.173905596, 0, 0.89200002, 0)
Clean.Size = UDim2.new(0, 40, 0, 22)
Clean.ZIndex = 999999999
Clean.Font = Enum.Font.TitilliumWeb
Clean.Text = "Clean"
Clean.TextColor3 = Color3.new(1, 1, 1)
Clean.TextSize = 19

Open.Name = "Open"
Open.Parent = Editor2
Open.BackgroundColor3 = Color3.new(0.12549, 0.129412, 0.145098)
Open.BorderColor3 = Color3.new(0, 0, 0)
Open.BorderSizePixel = 0
Open.Position = UDim2.new(0.269000024, 0, 0.892000079, 0)
Open.Size = UDim2.new(0, 51, 0, 22)
Open.ZIndex = 999999999
Open.Font = Enum.Font.TitilliumWeb
Open.Text = "Scripts"
Open.TextColor3 = Color3.new(1, 1, 1)
Open.TextSize = 19

Code.Name = "Code"
Code.Parent = Editor2
Code.BackgroundColor3 = Color3.new(0.156863, 0.156863, 0.156863)
Code.BackgroundTransparency = 0.75
Code.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
Code.BorderSizePixel = 0
Code.Position = UDim2.new(0, 7, 0, 36)
Code.Size = UDim2.new(0, 463, 0, 199)
Code.ZIndex = 99999
Code.CanvasSize = UDim2.new(0, 908, 0, 180)
Code.HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar
Code.ScrollBarThickness = 5

Source.Name = "Source"
Source.Parent = Code
Source.BackgroundColor3 = Color3.new(1, 1, 1)
Source.BackgroundTransparency = 1
Source.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Source.Size = UDim2.new(1, 0, 1, 0)
Source.ZIndex = 999999999
Source.ClearTextOnFocus = false
Source.Font = Enum.Font.Code
Source.MultiLine = true
Source.PlaceholderColor3 = Color3.new(0.8, 0.8, 0.8)
Source.Text = ""
Source.TextColor3 = Color3.new(1, 1, 1)
Source.TextSize = 13
Source.TextXAlignment = Enum.TextXAlignment.Left
Source.TextYAlignment = Enum.TextYAlignment.Top

Tokens_.Name = "Tokens_"
Tokens_.Parent = Source
Tokens_.BackgroundColor3 = Color3.new(1, 1, 1)
Tokens_.BackgroundTransparency = 1
Tokens_.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Tokens_.Size = UDim2.new(1, 0, 1, 0)
Tokens_.ZIndex = 5
Tokens_.Font = Enum.Font.Code
Tokens_.Text = ""
Tokens_.TextColor3 = Color3.new(1, 1, 1)
Tokens_.TextSize = 13
Tokens_.TextXAlignment = Enum.TextXAlignment.Left
Tokens_.TextYAlignment = Enum.TextYAlignment.Top

Numbers_.Name = "Numbers_"
Numbers_.Parent = Source
Numbers_.BackgroundColor3 = Color3.new(1, 1, 1)
Numbers_.BackgroundTransparency = 1
Numbers_.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Numbers_.Size = UDim2.new(1, 0, 1, 0)
Numbers_.ZIndex = 4
Numbers_.Font = Enum.Font.Code
Numbers_.Text = ""
Numbers_.TextColor3 = Color3.new(1, 0.776471, 0)
Numbers_.TextSize = 13
Numbers_.TextXAlignment = Enum.TextXAlignment.Left
Numbers_.TextYAlignment = Enum.TextYAlignment.Top

Keywords_.Name = "Keywords_"
Keywords_.Parent = Source
Keywords_.BackgroundColor3 = Color3.new(1, 1, 1)
Keywords_.BackgroundTransparency = 1
Keywords_.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Keywords_.Size = UDim2.new(1, 0, 1, 0)
Keywords_.ZIndex = 5
Keywords_.Font = Enum.Font.Code
Keywords_.Text = ""
Keywords_.TextColor3 = Color3.new(0.972549, 0.427451, 0.486275)
Keywords_.TextSize = 13
Keywords_.TextXAlignment = Enum.TextXAlignment.Left
Keywords_.TextYAlignment = Enum.TextYAlignment.Top

Globals_.Name = "Globals_"
Globals_.Parent = Source
Globals_.BackgroundColor3 = Color3.new(1, 1, 1)
Globals_.BackgroundTransparency = 1
Globals_.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Globals_.Size = UDim2.new(1, 0, 1, 0)
Globals_.ZIndex = 5
Globals_.Font = Enum.Font.Code
Globals_.Text = ""
Globals_.TextColor3 = Color3.new(0.517647, 0.839216, 0.968628)
Globals_.TextSize = 13
Globals_.TextXAlignment = Enum.TextXAlignment.Left
Globals_.TextYAlignment = Enum.TextYAlignment.Top

Strings_.Name = "Strings_"
Strings_.Parent = Source
Strings_.BackgroundColor3 = Color3.new(1, 1, 1)
Strings_.BackgroundTransparency = 1
Strings_.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Strings_.Size = UDim2.new(1, 0, 1, 0)
Strings_.ZIndex = 5
Strings_.Font = Enum.Font.Code
Strings_.Text = ""
Strings_.TextColor3 = Color3.new(0.678431, 0.945098, 0.584314)
Strings_.TextSize = 13
Strings_.TextXAlignment = Enum.TextXAlignment.Left
Strings_.TextYAlignment = Enum.TextYAlignment.Top

Comments_.Name = "Comments_"
Comments_.Parent = Source
Comments_.BackgroundColor3 = Color3.new(1, 1, 1)
Comments_.BackgroundTransparency = 1
Comments_.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Comments_.Size = UDim2.new(1.00215983, 0, 1, 0)
Comments_.ZIndex = 5
Comments_.Font = Enum.Font.Code
Comments_.Text = ""
Comments_.TextColor3 = Color3.new(0.231373, 0.784314, 0.231373)
Comments_.TextSize = 13
Comments_.TextXAlignment = Enum.TextXAlignment.Left
Comments_.TextYAlignment = Enum.TextYAlignment.Top

Vars_.Name = "Vars_"
Vars_.Parent = Source
Vars_.BackgroundColor3 = Color3.new(1, 1, 1)
Vars_.BackgroundTransparency = 1
Vars_.BorderColor3 = Color3.new(0.105882, 0.164706, 0.207843)
Vars_.Size = UDim2.new(1, 0, 1, 0)
Vars_.ZIndex = 5
Vars_.Font = Enum.Font.Code
Vars_.Text = ""
Vars_.TextColor3 = Color3.new(0.517647, 0.839216, 0.968628)
Vars_.TextSize = 13
Vars_.TextXAlignment = Enum.TextXAlignment.Left
Vars_.TextYAlignment = Enum.TextYAlignment.Top

UIListLayout.Parent = Code
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.Padding = UDim.new(0, 5)

Lines.Name = "Lines"
Lines.Parent = Code
Lines.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Lines.BackgroundTransparency = 0.75
Lines.BorderColor3 = Color3.new(0, 0, 0)
Lines.Position = UDim2.new(-0.0310009532, 0, -6.35782911e-08, 0)
Lines.Size = UDim2.new(0.0523750931, 0, 1.00977945, 0)
Lines.ZIndex = 4
Lines.Font = Enum.Font.Code
Lines.Text = "1"
Lines.TextColor3 = Color3.new(1, 1, 1)
Lines.TextSize = 13
Lines.TextYAlignment = Enum.TextYAlignment.Top

Execute.Name = "Execute"
Execute.Parent = Editor2
Execute.BackgroundColor3 = Color3.new(0.12549, 0.129412, 0.145098)
Execute.BorderColor3 = Color3.new(0, 0, 0)
Execute.BorderSizePixel = 0
Execute.Position = UDim2.new(0.0189424958, 0, 0.89200002, 0)
Execute.Size = UDim2.new(0, 68, 0, 22)
Execute.ZIndex = 999999999
Execute.Font = Enum.Font.TitilliumWeb
Execute.Text = "Run Script"
Execute.TextColor3 = Color3.new(1, 1, 1)
Execute.TextSize = 19

Scripts.Name = "Scripts"
Scripts.Parent = Editor2
Scripts.BackgroundColor3 = Color3.new(0.12549, 0.129412, 0.145098)
Scripts.BorderColor3 = Color3.new(0, 0, 0)
Scripts.BorderSizePixel = 0
Scripts.Position = UDim2.new(0.269000024, 0, 0.970696092, 0)
Scripts.Size = UDim2.new(0, 99, 0, 156)
Scripts.Visible = false

TextButton.Parent = Scripts
TextButton.BackgroundColor3 = Color3.new(0.0823529, 0.0862745, 0.101961)
TextButton.BorderColor3 = Color3.new(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.0808080807, 0, 0.0448717959, 0)
TextButton.Size = UDim2.new(0, 82, 0, 22)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Unc Test"
TextButton.TextColor3 = Color3.new(1, 1, 1)
TextButton.TextSize = 14

UICorner.Parent = TextButton

TextButton_2.Parent = Scripts
TextButton_2.BackgroundColor3 = Color3.new(0.0823529, 0.0862745, 0.101961)
TextButton_2.BorderColor3 = Color3.new(0, 0, 0)
TextButton_2.BorderSizePixel = 0
TextButton_2.Position = UDim2.new(0.0808080807, 0, 0.224358976, 0)
TextButton_2.Size = UDim2.new(0, 82, 0, 22)
TextButton_2.Font = Enum.Font.SourceSans
TextButton_2.Text = "Sunc Test"
TextButton_2.TextColor3 = Color3.new(1, 1, 1)
TextButton_2.TextSize = 14

UICorner_2.Parent = TextButton_2

TextButton_3.Parent = Scripts
TextButton_3.BackgroundColor3 = Color3.new(0.0823529, 0.0862745, 0.101961)
TextButton_3.BorderColor3 = Color3.new(0, 0, 0)
TextButton_3.BorderSizePixel = 0
TextButton_3.Position = UDim2.new(0.0808080807, 0, 0.429487169, 0)
TextButton_3.Size = UDim2.new(0, 82, 0, 22)
TextButton_3.Font = Enum.Font.SourceSans
TextButton_3.Text = "Inf yield"
TextButton_3.TextColor3 = Color3.new(1, 1, 1)
TextButton_3.TextSize = 14

UICorner_3.Parent = TextButton_3

TextButton_4.Parent = Scripts
TextButton_4.BackgroundColor3 = Color3.new(0.0823529, 0.0862745, 0.101961)
TextButton_4.BorderColor3 = Color3.new(0, 0, 0)
TextButton_4.BorderSizePixel = 0
TextButton_4.Position = UDim2.new(0.0808080807, 0, 0.628205121, 0)
TextButton_4.Size = UDim2.new(0, 82, 0, 22)
TextButton_4.Font = Enum.Font.SourceSans
TextButton_4.Text = "Dex"
TextButton_4.TextColor3 = Color3.new(1, 1, 1)
TextButton_4.TextSize = 14

UICorner_4.Parent = TextButton_4

TextButton_5.Parent = Scripts
TextButton_5.BackgroundColor3 = Color3.new(0.0823529, 0.0862745, 0.101961)
TextButton_5.BorderColor3 = Color3.new(0, 0, 0)
TextButton_5.BorderSizePixel = 0
TextButton_5.Position = UDim2.new(0.0808080807, 0, 0.820512831, 0)
TextButton_5.Size = UDim2.new(0, 82, 0, 22)
TextButton_5.Font = Enum.Font.SourceSans
TextButton_5.Text = "Hydroxide"
TextButton_5.TextColor3 = Color3.new(1, 1, 1)
TextButton_5.TextSize = 14

UICorner_5.Parent = TextButton_5

UICorner_6.Parent = Scripts

yV7rf7876f67G9t78.Name = "yV7rf7876f67G9t78"
yV7rf7876f67G9t78.Parent = TYTFdyRTYft8D8yteeY
yV7rf7876f67G9t78.BackgroundColor3 = Color3.new(0, 0, 0)
yV7rf7876f67G9t78.BackgroundTransparency = 0.5
yV7rf7876f67G9t78.BorderColor3 = Color3.new(0, 0, 0)
yV7rf7876f67G9t78.BorderSizePixel = 0
yV7rf7876f67G9t78.Position = UDim2.new(-3.26302409, 0, -2.84547734, 0)
yV7rf7876f67G9t78.Size = UDim2.new(9999, 9999, 9999, 9999)
yV7rf7876f67G9t78.ZIndex = 999999998

-- Scripts

local function TTUW_fake_script() -- Clean.LocalScript 
	local script = Instance.new('LocalScript', Clean)

	local editor = script.Parent.Parent.Code.Source
	
	script.Parent.MouseButton1Click:Connect(function()
		local monaco = script.Parent.Parent.Code.Source
		monaco.Text = ""
	end)
end
coroutine.wrap(TTUW_fake_script)()
local function JATKF_fake_script() -- Open.LocalScript 
	local script = Instance.new('LocalScript', Open)

	local button = script.Parent
	
	button.MouseButton1Down:Connect(function()
		if script.Parent.Parent.Scripts.Visible == true then
		script.Parent.Parent.Scripts.Visible = false
else
script.Parent.Parent.Scripts.Visible = true
end
	end)
	
end
coroutine.wrap(JATKF_fake_script)()
local function HTCRR_fake_script() -- Source.sourcetext 
	local script = Instance.new('LocalScript', Source)

	script.Parent.Changed:Connect(function()
		
	end)
	
end
coroutine.wrap(HTCRR_fake_script)()
local function PZNFL_fake_script() -- Code.editor_text 
	local script = Instance.new('LocalScript', Code)

	local settings = {
		Highlight = true;
		Lines =true;
		Scroll = true;
		HighlightVariables=true;
		SplitScanLines=false;
		WaitIfRendered=true;
		AutomaticSettingChange=true;
		LoadLexer=true;
	}
	
	local RunService = game:GetService("RunService")
	local Fps = 0
	local TimeFunction = RunService:IsRunning() and time or os.clock
	
	local LastIteration, Start
	local FrameUpdateTable = {}
	
	local function HeartbeatUpdate()
		LastIteration = TimeFunction()
		for Index = #FrameUpdateTable, 1, -1 do
			FrameUpdateTable[Index + 1] = FrameUpdateTable[Index] >= LastIteration - 1 and FrameUpdateTable[Index] or nil
		end
	
		FrameUpdateTable[1] = LastIteration
		Fps = tonumber(math.floor(TimeFunction() - Start >= 1 and #FrameUpdateTable or #FrameUpdateTable / (TimeFunction() - Start)))
	end
	
	Start = TimeFunction()
	RunService.Heartbeat:Connect(HeartbeatUpdate)
	
	local function parse(tokens)
		local localvarables = {}
		local whitespacecharactersfound=0
		local readabletokens = {}
		local tokennumbers = {}
		for i,v in pairs(tokens) do
			if v.Source == " " then
				whitespacecharactersfound+=1
				continue
			end
			if v.Type=="space" then
				whitespacecharactersfound+=1
				continue
			end
	
			table.insert(readabletokens,v)
			table.insert(tokennumbers,{i})
		end
	
	
		for i,v in pairs(readabletokens) do
			pcall(function()
				if v.Source == "local" then
					local _,name =pcall(function()return readabletokens[i+1].Source;end)
					if _==false then
						error("Syntax Error: Expected more code")
					end
					if name == "function" then
						_,name =pcall(function()return readabletokens[i+2].Source;end)
						if _==false then
							error("Syntax Error: Expected more code")
						end
						if readabletokens[i+2].Type~="iden" then
							error("Syntax Error: Name isnt an idient")
						end
						table.insert(localvarables,{Name = name,Type="Local",Source = "function",number = tokennumbers[i][1]+4})
					else
						table.insert(localvarables,{Name = name,Type="Local",Source = readabletokens[i+3].Source,number = tokennumbers[i]
							[1]+1})
					end
				elseif v.Type == "iden"  then
	
					if readabletokens[i-1] then
						if readabletokens[i-1].Type ~= "keyword" and readabletokens[i-1].Type ~= "symbol"  then
							local source = readabletokens[i+2].Source
							table.insert(localvarables,{Name = v.Source,Type="Global",Source = source;number = tokennumbers[i]
								[1]})  
						elseif readabletokens[i-1].Source=="function" then
							local source = "function"
							table.insert(localvarables,{Name = v.Source,Type="Global",Source = source;number = tokennumbers[i]
								[1]})  
	
						end
					else
						local source = readabletokens[i+2].Source
						table.insert(localvarables,{Name = v.Source,Type="Global",Source = source,number = tokennumbers[i][1]})  
					end
				end
			end)
		end
	
		return (localvarables)
	end
	
	local function lexerscan(text)
		local lexer = coroutine.wrap(function()
	
			local lexer = {}
	
			local yield, wrap  = coroutine.yield, coroutine.wrap
			local strfind      = string.find
			local strsub       = string.sub
			local append       = table.insert
			local type         = type
	
			local NUMBER1	= "^[%+%-]?%d+%.?%d*[eE][%+%-]?%d+"
			local NUMBER2	= "^[%+%-]?%d+%.?%d*"
			local NUMBER3	= "^0x[%da-fA-F]+"
			local NUMBER4	= "^%d+%.?%d*[eE][%+%-]?%d+"
			local NUMBER5	= "^%d+%.?%d*"
			local IDEN		= "^[%a_][%w_]*"
			local WSPACE	= "^%s+"
			local STRING1	= "^(['\"])%1"							
			local STRING2	= [[^(['"])(\*)%2%1]]
			local STRING3	= [[^(['"]).-[^\](\*)%2%1]]
			local STRING4	= "^(['\"]).-.*"						
			local STRING5	= "^%[(=*)%[.-%]%1%]"					
			local STRING6	= "^%[%[.-.*"							
			local CHAR1		= "^''"
			local CHAR2		= [[^'(\*)%1']]
			local CHAR3		= [[^'.-[^\](\*)%1']]
			local PREPRO	= "^#.-[^\\]\n"
			local MCOMMENT1	= "^%-%-%[(=*)%[.-%]%1%]"				
			local MCOMMENT2	= "^%-%-%[%[.-.*"						
			local SCOMMENT1	= "^%-%-.-\n"							
			local SCOMMENT2	= "^%-%-.-.*"							
	
			local lua_keyword = {
				["and"] = true,  ["break"] = true,  ["do"] = true,      ["else"] = true,      ["elseif"] = true,
				["end"] = true,  ["false"] = true,  ["for"] = true,     ["function"] = true,  ["if"] = true,
				["in"] = true,   ["local"] = true,  ["nil"] = true,     ["not"] = true,       ["while"] = true,
				["or"] = true,   ["repeat"] = true, ["return"] = true,  ["then"] = true,      ["true"] = true,
				["self"] = true, ["until"] = true
			}
	
			local lua_builtin = {
				["assert"] = true;["collectgarbage"] = true;["error"] = true;["_G"] = true;
				["gcinfo"] = true;["getfenv"] = true;["getmetatable"] = true;["ipairs"] = true;
				["loadstring"] = true;["newproxy"] = true;["next"] = true;["pairs"] = true;
				["pcall"] = true;["print"] = true;["rawequal"] = true;["rawget"] = true;["rawset"] = true;
				["select"] = true;["setfenv"] = true;["setmetatable"] = true;["tonumber"] = true;
				["tostring"] = true;["type"] = true;["unpack"] = true;["_VERSION"] = true;["xpcall"] = true;
				["delay"] = true;["elapsedTime"] = true;["require"] = true;["spawn"] = true;["tick"] = true;
				["time"] = true;["typeof"] = true;["UserSettings"] = true;["wait"] = true;["warn"] = true;
				["game"] = true;["Enum"] = true;["script"] = true;["shared"] = true;["workspace"] = true;
				["Axes"] = true;["BrickColor"] = true;["CFrame"] = true;["Color3"] = true;["ColorSequence"] = true;
				["ColorSequenceKeypoint"] = true;["Faces"] = true;["Instance"] = true;["NumberRange"] = true;
				["NumberSequence"] = true;["NumberSequenceKeypoint"] = true;["PhysicalProperties"] = true;
				["Random"] = true;["Ray"] = true;["Rect"] = true;["Region3"] = true;["Region3int16"] = true;
				["TweenInfo"] = true;["UDim"] = true;["UDim2"] = true;["Vector2"] = true;["Vector3"] = true;
				["Vector3int16"] = true;["next"] = true;
				["os"] = true;
				["os.time"] = true;["os.date"] = true;["os.difftime"] = true;
				["debug"] = true;
				["debug.traceback"] = true;["debug.profilebegin"] = true;["debug.profileend"] = true;
				["math"] = true;
				["math.abs"] = true;["math.acos"] = true;["math.asin"] = true;["math.atan"] = true;["math.atan2"] = true;["math.ceil"] = true;["math.clamp"] = true;["math.cos"] = true;["math.cosh"] = true;["math.deg"] = true;["math.exp"] = true;["math.floor"] = true;["math.fmod"] = true;["math.frexp"] = true;["math.ldexp"] = true;["math.log"] = true;["math.log10"] = true;["math.max"] = true;["math.min"] = true;["math.modf"] = true;["math.noise"] = true;["math.pow"] = true;["math.rad"] = true;["math.random"] = true;["math.randomseed"] = true;["math.sign"] = true;["math.sin"] = true;["math.sinh"] = true;["math.sqrt"] = true;["math.tan"] = true;["math.tanh"] = true;
				["coroutine"] = true;
				["coroutine.create"] = true;["coroutine.resume"] = true;["coroutine.running"] = true;["coroutine.status"] = true;["coroutine.wrap"] = true;["coroutine.yield"] = true;
				["string"] = true;
				["string.byte"] = true;["string.char"] = true;["string.dump"] = true;["string.find"] = true;["string.format"] = true;["string.len"] = true;["string.lower"] = true;["string.match"] = true;["string.rep"] = true;["string.reverse"] = true;["string.sub"] = true;["string.upper"] = true;["string.gmatch"] = true;["string.gsub"] = true;
				["table"] = true;
				["table.concat"] = true;["table.insert"] = true;["table.remove"] = true;["table.sort"] = true;
			}
	
			local function tdump(tok)
				return yield(tok, tok)
			end
	
			local function ndump(tok)
				return yield("number", tok)
			end
	
			local function sdump(tok)
				return yield("string", tok)
			end
	
			local function cdump(tok)
				return yield("comment", tok)
			end
	
			local function wsdump(tok)
				return yield("space", tok)
			end
	
			local function lua_vdump(tok)
				if (lua_keyword[tok]) then
					return yield("keyword", tok)
				elseif (lua_builtin[tok]) then
					return yield("builtin", tok)
				else
					return yield("iden", tok)
				end
			end
	
			local lua_matches = {
				{IDEN,      lua_vdump},        -- Indentifiers
				{WSPACE,    wsdump},           -- Whitespace
				{NUMBER3,   ndump},            -- Numbers
				{NUMBER4,   ndump},
				{NUMBER5,   ndump},
				{STRING1,   sdump},            -- Strings
				{STRING2,   sdump},
				{STRING3,   sdump},
				{STRING4,   sdump},
				{STRING5,   sdump},            -- Multiline-Strings
				{STRING6,   sdump},            -- Multiline-Strings
	
				{MCOMMENT1, cdump},            -- Multiline-Comments
				{MCOMMENT2, cdump},			
				{SCOMMENT1, cdump},            -- Singleline-Comments
				{SCOMMENT2, cdump},
	
				{"^==",     tdump},            -- Operators
				{"^~=",     tdump},
				{"^<=",     tdump},
				{"^>=",     tdump},
				{"^%.%.%.", tdump},
				{"^%.%.",   tdump},
				{"^.",      tdump}
			}
	
			local num_lua_matches = #lua_matches
	
	
			--- Create a plain token iterator from a string.
			-- @tparam string s a string.
			function lexer.scan(s)
	
				local function lex(first_arg)
	
					local line_nr = 0
					local sz = #s
					local idx = 1
	
					-- res is the value used to resume the coroutine.
					local function handle_requests(res)
						while (res) do
							local tp = type(res)
							-- Insert a token list:
							if (tp == "table") then
								res = yield("", "")
								for i = 1,#res do
									local t = res[i]
									res = yield(t[1], t[2])
								end
							elseif (tp == "string") then -- Or search up to some special pattern:
								local i1, i2 = strfind(s, res, idx)
								if (i1) then
									local tok = strsub(s, i1, i2)
									idx = (i2 + 1)
									res = yield("", tok)
								else
									res = yield("", "")
									idx = (sz + 1)
								end
							else
								res = yield(line_nr, idx)
							end
						end
					end
	
					handle_requests(first_arg)
					line_nr = 1
	
					while (true) do
	
						if (idx > sz) then
							while (true) do
								handle_requests(yield())
							end
						end
	
						for i = 1,num_lua_matches do
							local m = lua_matches[i]
							local pat = m[1]
							local fun = m[2]
							local findres = {strfind(s, pat, idx)}
							local i1, i2 = findres[1], findres[2]
							if (i1) then
								local tok = strsub(s, i1, i2)
								idx = (i2 + 1)
								lexer.finished = (idx > sz)
								local res = fun(tok, findres)
								if (tok:find("\n")) then
									-- Update line number:
									local _,newlines = tok:gsub("\n", {})
									line_nr = (line_nr + newlines)
								end
								handle_requests(res)
								break
							end
						end
	
					end
	
				end
	
				return wrap(lex)
	
			end
	
			return lexer
		end)()
		local function doesvalueexist(value,tab)
			for i,v in pairs(tab) do
				if v == value then
					return true
				end
			end
			return false or nil
		end
		local symbols = {
			";";
			"^";
			"(";
			")";
			"%";
			"/";
			":";
			"#";
			"-";
			"=";
			"+";
			"{";
			"}";
			"~";
			"<";
			">";
			"*";
			",";
			".";
			"\""}
		local t={}
		local split=text:split("\n")
		if settings.SplitScanLines==true then
			for _, splitv in pairs(text:split("\n")) do 
				for i,v in (lexer.scan(splitv)) do
					local type= i
					if doesvalueexist(type,symbols)  then-- makes the type "symbol" if it is a symbol
						type="symbol"
					end
					table.insert(t,{Type=type,Source=v})
				end
				table.insert(t,{Type="space",Source="\n"})--dont remove this unless you know what you're doing
				if settings.WaitIfRendered then
					game:GetService("RunService").RenderStepped:Wait()
				end
			end
		else
	
			for i,v in (lexer.scan(text)) do
				local type= i
				if doesvalueexist(type,symbols)  then-- makes the type "symbol" if it is a symbol
					type="symbol"
				end
				table.insert(t,{Type=type,Source=v})
				if settings.WaitIfRendered then
					game:GetService("RunService").RenderStepped:Wait()
				end
			end
	
	
	
		end
		return(t)
	end
	local GetTypeToMakeSyntax=function(s,t)
		if type(s)=="string" then
			if t=="var" then
				local tokens=lexerscan(s)
				local r=""
				local variables=parse(tokens)
				local s={}
				for i,v in pairs(variables) do
					s[v.Name]=v
				end
				for i,v in pairs(tokens) do
					if s[v.Source] then
						if tokens[i-1] then
							if tokens[i-1].Source~="." then
								r=r..v.Source
							else
								continue
							end
						else
							r=r..v.Source
						end
					else
						local s=string.gsub(v.Source,"%d",function(c)return string.rep(" ",#c)end)
						local p=string.gsub(s,"%p",function(c)return string.rep(" ",#c)end)
						local a=string.gsub(p,"%a",function(c)return string.rep(" ",#c)end)
						r=r..a
					end
				end
	
				return(r)
			else
				local tokens=lexerscan(s)
				local r=""
				for i,v in pairs(tokens) do
					if v.Type==t then
						r=r..v.Source
					else
						local s=string.gsub(v.Source,"%d",function(c)return string.rep(" ",#c)end)
						local p=string.gsub(s,"%p",function(c)return string.rep(" ",#c)end)
						local a=string.gsub(p,"%a",function(c)return string.rep(" ",#c)end)
						r=r..a
					end
				end
	
				return(r)
			end
		elseif type(s)=="table" then
			if t=="var" then
				local tokens=s
				local r=""
				local variables=parse(tokens)
				local s={}
				for i,v in pairs(variables) do
					s[v.Name]=v
				end
				for i,v in pairs(tokens) do
					if s[v.Source] then
						if tokens[i-1] then
							if tokens[i-1].Source~="." then
								r=r..v.Source
							else
								continue
							end
						else
							r=r..v.Source
						end
					else
						local s=string.gsub(v.Source,"%d",function(c)return string.rep(" ",#c)end)
						local p=string.gsub(s,"%p",function(c)return string.rep(" ",#c)end)
						local a=string.gsub(p,"%a",function(c)return string.rep(" ",#c)end)
						r=r..a
					end
				end
	
				return(r)
			else
				local tokens=s
				local r=""
				for i,v in pairs(tokens) do
					if v.Type==t then
						r=r..v.Source
					else
						local s=string.gsub(v.Source,"%d",function(c)return string.rep(" ",#c)end)
						local p=string.gsub(s,"%p",function(c)return string.rep(" ",#c)end)
						local a=string.gsub(p,"%a",function(c)return string.rep(" ",#c)end)
						r=r..a
					end
				end
	
				return(r)
			end
		end
	end
	
	local L_1_ = script.Parent.Source
	local L_2_ = Vector2.new(0, 0)  
	local L_3_Org = {      "getrawmetatable",       "game",       "workspace",       "script",       "math",       "string",       "table",       "print",       "wait",       "BrickColor",       "Color3",       "next",       "pairs",       "ipairs",       "select",       "unpack",       "Instance",       "Vector2",       "Vector3",       "CFrame",       "Ray",       "UDim2",       "Enum",       "assert",       "error",       "warn",       "tick",       "loadstring",       "_G",       "shared",       "getfenv",       "setfenv",       "newproxy",       "setmetatable",       "getmetatable",       "os",       "debug",       "pcall",       "ypcall",       "xpcall",       "rawequal",       "rawset",       "rawget",       "tonumber",       "tostring",       "type",       "typeof",       "_VERSION",       "coroutine",       "delay",       "require",       "spawn",       "LoadLibrary",       "settings",       "stats",       "time",       "UserSettings",       "version",       "Axes",       "ColorSequence",       "Faces",       "ColorSequenceKeypoint",       "NumberRange",       "NumberSequence",       "NumberSequenceKeypoint",       "gcinfo",       "elapsedTime",       "collectgarbage",       "PhysicalProperties",       "Rect",       "Region3",       "Region3int16",       "UDim",       "Vector2int16",       "Vector3int16" } 
	local L_3_ = {      "getrawmetatable",       "game",       "workspace",       "script",       "math",       "string",       "table",       "print",       "wait",       "BrickColor",       "Color3",       "next",       "pairs",       "ipairs",       "select",       "unpack",       "Instance",       "Vector2",       "Vector3",       "CFrame",       "Ray",       "UDim2",       "Enum",       "assert",       "error",       "warn",       "tick",       "loadstring",       "_G",       "shared",       "getfenv",       "setfenv",       "newproxy",       "setmetatable",       "getmetatable",       "os",       "debug",       "pcall",       "ypcall",       "xpcall",       "rawequal",       "rawset",       "rawget",       "tonumber",       "tostring",       "type",       "typeof",       "_VERSION",       "coroutine",       "delay",       "require",       "spawn",       "LoadLibrary",       "settings",       "stats",       "time",       "UserSettings",       "version",       "Axes",       "ColorSequence",       "Faces",       "ColorSequenceKeypoint",       "NumberRange",       "NumberSequence",       "NumberSequenceKeypoint",       "gcinfo",       "elapsedTime",       "collectgarbage",       "PhysicalProperties",       "Rect",       "Region3",       "Region3int16",       "UDim",       "Vector2int16",       "Vector3int16" } 
	local L_4_ = {       "and",       "break",       "do",       "else",       "elseif",       "end",       "false",       "for",       "function",       "goto",       "if",       "in",       "local",       "nil",       "not",       "or",       "repeat",       "return",       "then",       "true",       "until",       "while" } 
	
	local function L_5_func(L_49_arg1)       
		local L_50_, L_51_ = L_49_arg1.CanvasSize.Y.Offset, L_49_arg1.AbsoluteWindowSize.Y       
		local L_52_ = L_50_ - L_51_       
		if L_52_ < 0 then             
			L_52_ = 0
		end       
		local L_53_ = Vector2.new(L_49_arg1.CanvasPosition.X, L_52_)       
		return L_53_ 
	end 
	local function ofodguisgfhjjksfghkgh(L_49_arg1)       
		local L_50_, L_51_ = L_49_arg1.CanvasSize.X.Offset, L_49_arg1.AbsoluteWindowSize.X       
		local L_52_ = L_50_ - L_51_       
		if L_52_ < 0 then             
			L_52_ = 0
		end       
		local L_53_ = Vector2.new(L_52_,L_49_arg1.CanvasPosition.Y)       
		return L_53_ 
	end 
	local function GetLineSelected(s)
		local text =  s.Text
		local p = s.CursorPosition
		local text2 = ""
		for i = p,1,-1 do
			local c = text:sub(i,i)
			if c == "\n" then
				break
			else
				text2 = text2 .. c
			end
		end
	
		return (text2:reverse())
	end
	
	wait(.2) 
	local L_6_ = 20 
	L_1_:GetPropertyChangedSignal("Text"):Connect(function()
		if settings.Highlight then
			local L_54_ = L_1_.Comments_       
			local L_56_ = L_1_.Tokens_       
			local L_57_ = L_1_.Numbers_       
			local L_58_ = L_1_.Strings_             
			local L_61_ = L_1_.Keywords_       
			local L_62_ = L_1_.Globals_  
			local L_90_ = L_1_.Vars_  
			if settings.LoadLexer then
				local tokens= lexerscan(L_1_.Text) 
				L_54_.Text=GetTypeToMakeSyntax(tokens,"comment")
	
				L_58_.Text=GetTypeToMakeSyntax(tokens,"string")
	
				L_57_.Text=GetTypeToMakeSyntax(tokens,"number")
	
				L_62_.Text=GetTypeToMakeSyntax(tokens,"builtin")
	
				L_56_.Text=GetTypeToMakeSyntax(tokens,"symbol")
	
				L_61_.Text=GetTypeToMakeSyntax(tokens,"keyword")
	
				if settings.HighlightVariables then
					L_90_.Text=GetTypeToMakeSyntax(tokens,"var")
				end
	
			else
				spawn(function()
					L_54_.Text=GetTypeToMakeSyntax(L_1_.Text,"comment")
				end)
				spawn(function()
					L_58_.Text=GetTypeToMakeSyntax(L_1_.Text,"string")
				end)
				spawn(function()
					L_57_.Text=GetTypeToMakeSyntax(L_1_.Text,"number")
				end)
				spawn(function()
					L_62_.Text=GetTypeToMakeSyntax(L_1_.Text,"builtin")
				end)
				spawn(function()
					L_56_.Text=GetTypeToMakeSyntax(L_1_.Text,"symbol")
				end)
				spawn(function()
					L_61_.Text=GetTypeToMakeSyntax(L_1_.Text,"keyword")
				end)
				spawn(function()
					if settings.HighlightVariables then
						L_90_.Text=GetTypeToMakeSyntax(L_1_.Text,"var")
					end
				end)
	
			end
		end
		local L_63_ = 1    
		if settings.Scroll then
			local X = L_1_.TextBounds.X
			L_1_.Parent.CanvasSize = (UDim2.new(0, L_1_.TextBounds.X + 55 + 5, 0, L_1_.TextBounds.Y))   
		end
		if settings.Lines then
			L_1_.Text:gsub('\n', function()             
				L_63_ = L_63_ + 1       end)      
			L_1_.Parent.Lines.Text = ""       
			for L_64_forvar1 = 1, L_63_ do             
				L_1_.Parent.Lines.Text = L_1_.Parent.Lines.Text..L_64_forvar1.."\n"       
			end       
		end
		if settings.Scroll then
			spawn(function()
				if L_1_.Parent.CanvasPosition.X == L_2_.X then
					L_1_.Parent.CanvasPosition = ofodguisgfhjjksfghkgh(L_1_.Parent)  
				else             
					L_2_ = ofodguisgfhjjksfghkgh(L_1_.Parent)   
				end 
			end)
			wait()
			if L_1_.Text:sub(#L_1_.Text,#L_1_.Text) == "\n" then
				L_1_.Parent.CanvasPosition = Vector2.new()
			end
	
			if L_1_.Parent.CanvasPosition.Y == L_2_.Y then
				L_1_.Parent.CanvasPosition = L_5_func(L_1_.Parent)       
			else             
				L_2_ = L_5_func(L_1_.Parent)       
			end 
		end
	
	
	
	end) 
	
	if settings.Scroll then
		L_1_.MouseWheelBackward:Connect(function(L_65_arg1, L_66_arg2)       
			wait(.1)      
			game.TweenService:Create(L_1_.Parent, TweenInfo.new(.5, Enum.EasingStyle.Quint), {CanvasPosition = L_1_.Parent.CanvasPosition + Vector2.new(0, L_6_)}):Play()
			L_6_ = L_6_ + 5       
			wait(1)       
			L_6_ = L_6_ - 5 	
		end) 
		L_1_.MouseWheelForward:Connect(function(L_67_arg1, L_68_arg2)    
			wait(.1)      
			game.TweenService:Create(L_1_.Parent, TweenInfo.new(.5, Enum.EasingStyle.Quint), {CanvasPosition = L_1_.Parent.CanvasPosition + Vector2.new(0,-L_6_)}):Play()
			L_6_ = L_6_ + 5       
			wait(1)       
			L_6_ = L_6_ - 5 
		end)
	end
	
	if settings.Lines then
		script.Parent.Lines.Visible = true
		L_1_.Position = UDim2.new(0,30,0,0)
	else
		L_1_.Position = UDim2.new()
	end
	
	if settings.AutomaticSettingChange== true then
		
		spawn(function()
			pcall(function()
				while wait(10) do
					settings.Highlight=true
					if Fps>50 then
						settings.SplitScanLines=false
						settings.LoadLexer=false
						settings.WaitIfRendered=false
						
					elseif Fps<60 and Fps>40 then
						settings.SplitScanLines=false
						settings.LoadLexer=true
						settings.WaitIfRendered=true
						settings.HighlightVariables=false
						
					elseif Fps<35 then
						settings.SplitScanLines=true
						settings.LoadLexer=true
						settings.WaitIfRendered=true
						settings.HighlightVariables=false
						
					elseif Fps>10 then
						settings.Highlight=false
					end
				end
			end)
		end)
	end
end
coroutine.wrap(PZNFL_fake_script)()
local function JHAW_fake_script() -- Execute.LocalScript 
	local script = Instance.new('LocalScript', Execute)

	
end
coroutine.wrap(JHAW_fake_script)()
local function NCUDNVM_fake_script() -- Execute.LocalScript 
	local script = Instance.new('LocalScript', Execute)

	local execut = script.Parent
	local monaco = script.Parent.Parent.Code.Source
	script.Parent.MouseButton1Click:Connect(function()
		loadstring(monaco.Text)()
	end)
end
coroutine.wrap(NCUDNVM_fake_script)()
local function RMNUOMJ_fake_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	local monaco = script.Parent.Parent.Parent.Code.Source
	script.Parent.MouseButton1Click:Connect(function()
		monaco.Text = "loadstring(game:HttpGet('https://raw.githubusercontent.com/unified-naming-convention/NamingStandard/refs/heads/main/UNCCheckEnv.lua'))()"
		script.Parent.Parent.Visible = false
	end)
end
coroutine.wrap(RMNUOMJ_fake_script)()
local function OKCRZLL_fake_script() -- TextButton_2.LocalScript 
	local script = Instance.new('LocalScript', TextButton_2)

	local monaco = script.Parent.Parent.Parent.Code.Source
	script.Parent.MouseButton1Click:Connect(function()
		local scripte = [[
	getgenv().sUNCDebug = {
		["printcheckpoints"] = false,
		["delaybetweentests"] = 0
	}
	
	loadstring(game:HttpGet("https://script.sunc.su/"))()
		]]
		monaco.Text = scripte
		script.Parent.Parent.Visible = false
	end)
end
coroutine.wrap(OKCRZLL_fake_script)()
local function DFUDJ_fake_script() -- TextButton_3.LocalScript 
	local script = Instance.new('LocalScript', TextButton_3)

	local monaco = script.Parent.Parent.Parent.Code.Source
	script.Parent.MouseButton1Click:Connect(function()
		local scripte = [[
	loadstring(game:HttpGet("https://raw.githubusercontent.com/edgeiy/infiniteyield/master/source"))()
		]]
		monaco.Text = scripte
		script.Parent.Parent.Visible = false
	end)
end
coroutine.wrap(DFUDJ_fake_script)()
local function VPKRCM_fake_script() -- TextButton_4.LocalScript 
	local script = Instance.new('LocalScript', TextButton_4)

	local monaco = script.Parent.Parent.Parent.Code.Source
	script.Parent.MouseButton1Click:Connect(function()
		local scripte = [[
	loadstring(game:HttpGet("https://raw.githubusercontent.com/infyiff/backup/main/dex.lua"))()
		]]
		monaco.Text = scripte
		script.Parent.Parent.Visible = false
	end)
end
coroutine.wrap(VPKRCM_fake_script)()
local function VGZWYXD_fake_script() -- TextButton_5.LocalScript 
	local script = Instance.new('LocalScript', TextButton_5)

	local monaco = script.Parent.Parent.Parent.Code.Source
	script.Parent.MouseButton1Click:Connect(function()
		local scripte = [[
	local owner = "Upbolt"
	local branch = "revision"
	
	local function webImport(file)
		return loadstring(game:HttpGetAsync(("https://raw.githubusercontent.com/%s/Hydroxide/%s/%s.lua"):format(owner, branch, file)), file .. '.lua')()
	end
	
	webImport("init")
	webImport("ui/main")
		]]
		monaco.Text = scripte
		script.Parent.Parent.Visible = false
	end)
end
coroutine.wrap(VGZWYXD_fake_script)()
local function KJBM_fake_script() -- yV7rf7876f637G9t78.DraggableGUI 
	local script = Instance.new('LocalScript', yV7rf7876f637G9t78)

	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end
coroutine.wrap(KJBM_fake_script)()
local function FVRTII_fake_script() -- TYTFdyRTYft8D8yteeY.LocalScript 
	local script = Instance.new('LocalScript', TYTFdyRTYft8D8yteeY)

	local frame = script.Parent.yV7rf7876f637G9t78 --frame name
	local frame2 = script.Parent.yV7rf7876f67G9t78 --frame name
	local hotkey = Enum.KeyCode.Insert --Change your keybind you want.
	
	local UIS = game:GetService("UserInputService")
	local open = false
	
	
	
	UIS.InputBegan:Connect(function(key, gp)
		if key.KeyCode == hotkey then
			if UIS:GetFocusedTextBox() == nil then
				if open == false then
					open = true 
					frame.Visible = open
					frame2.Visible = open
				elseif open == true then
					open = false
					frame.Visible = open
					frame2.Visible = open
				end
			end
		end
	end)
end
coroutine.wrap(FVRTII_fake_script)()
